
NamedWildcardExplicitForall.hs:8:7: error:
    • Couldn't match type ‘_a’ with ‘Bool’
      Expected: _a -> _a
        Actual: Bool -> Bool
      ‘_a’ is a rigid type variable bound by
        the type signature for:
          foo :: forall _a. _a -> _a
        at NamedWildcardExplicitForall.hs:7:1-27
    • In the expression: not
      In an equation for ‘foo’: foo = not
    • Relevant bindings include
        foo :: _a -> _a (bound at NamedWildcardExplicitForall.hs:8:1)

NamedWildcardExplicitForall.hs:10:8: error:
    • Found type wildcard ‘_a’ standing for ‘Bool’
      To use the inferred type, enable PartialTypeSignatures
    • In the type signature: bar :: _a -> _a

NamedWildcardExplicitForall.hs:14:1: error:
    Can't quantify over ‘_a’
      bound by the partial type signature:
        baz :: forall _a. _a -> _b -> (_a, _b)
      ‘_a’ should really be ‘Bool’

NamedWildcardExplicitForall.hs:16:8: error:
    • Found type wildcard ‘_a’ standing for ‘Bool’
      To use the inferred type, enable PartialTypeSignatures
    • In the type signature: qux :: _a -> (forall _a. _a -> _a) -> _a
